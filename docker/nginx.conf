server {
  client_max_body_size 0;
  listen 9090;

  server_name _;
  root /opt/build;
  resolver kube-dns.kube-system.svc.cluster.local valid=1s;

  set $current_client_version "{{version}}";

  location ~ ^/api/([a-zA-Z0-9-]+)\/internal/(.*)$ {
    return 401;
  }

  location ~ ^/api/([a-zA-Z0-9-]+)\/(.*) {
    access_by_lua_block {
      if (ngx.var.http_x_client_version ~= ngx.var.current_client_version and ngx.req.get_method() ~= ngx.HTTP_OPTIONS)
      then
        ngx.log(
          ngx.ERR,
          "\n======\n",
          "HTTP header version: ", ngx.var.http_x_client_version,
          "\n",
          "Current config version: ", ngx.var.current_client_version,
          "\n",
          "HTTP METHOD: ", ngx.req.get_method(),
          "\n======\n"
        )

        ngx.exit(426)
      end
    }

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://$1.platform.svc.cluster.local:9090/$2$is_args$args;
  }

  location /health {
    proxy_pass http://localhost:3000/health;
  }

  location / {
    try_files $uri $uri/ /index.html;
  }

  location ~* \.(?:manifest|appcache|html?|xml|json)$ {
    etag off;
    expires off;
    if_modified_since off;
    #access_log logs/static.log;
  }

  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
    access_log off;
    etag off;
    expires 1m;
    add_header Cache-Control "private";
  }

  location ~* \.(?:css|js)$ {
    access_log off;
    etag off;
    expires 1m;
    add_header Cache-Control "private";
  }
}
