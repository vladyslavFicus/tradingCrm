import keyMirror from 'keymirror';
import I18n from '../../../../utils/fake-i18n';

const attributeLabels = {
  name: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.NAME'),
  templates: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.TEMPLATES'),
  addBonusTemplate: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.ADD_BONUS_TEMPLATE'),
  bonusReward: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.BONUS_REWARD'),
  grant: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.GRANT'),
  capping: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.CAPPING'),
  prize: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.PRIZE'),
  prizeCapingType: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.PRIZE_CAPPING_TYPE'),
  multiplier: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.MULTIPLIER'),
  moneyPriority: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.MONEY_TYPE_PRIORITY'),
  maxBet: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.MAX_BET'),
  bonusLifeTime: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.BONUS_LIFE_TIME'),
  claimable: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.CLAIMABLE'),
  maxGrantedAmount: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.MAX_GRANTED_AMOUNT'),
  lifeTime: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.LIFE_TIME'),
  wageringRequirement: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.WAGERING_REQUIREMENT'),
  lockAmountStrategy: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.LOCK_AMOUNT_STRATEGY'),
};

const attributePlaceholders = {
  days: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.PLACEHOLDERS.DAYS'),
  notSet: I18n.t('CAMPAIGNS.SETTINGS.REWARDS.BONUS.LABEL.PLACEHOLDERS.NOT_SET'),
};

const wageringRequirementTypes = keyMirror({
  ABSOLUTE: null,
  BONUS: null,
  DEPOSIT: null,
  BONUS_PLUS_DEPOSIT: null,
});

export {
  attributeLabels,
  attributePlaceholders,
  wageringRequirementTypes,
};
