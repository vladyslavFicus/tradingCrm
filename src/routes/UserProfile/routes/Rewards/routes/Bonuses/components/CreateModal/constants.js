import keyMirror from 'keymirror';
import I18n from '../../../../../../../../utils/fake-i18n';

const attributeLabels = {
  playerUUID: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.PLAYER_UUID'),
  label: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.LABEL'),
  priority: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.PRIORITY'),
  moneyTypePriority: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.MONEY_TYPE_PRIORITY'),
  currency: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.CURRENCY'),
  state: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.STATE'),
  grantedAmount: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.GRANTED_AMOUNT'),
  amountToWage: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.AMOUNT_TO_WAGE'),
  createdDate: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.CREATED_DATE'),
  expirationDate: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.EXPIRATION_DATE'),
  prize: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.PRIZE'),
  prizeCapingType: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.PRIZE_CAPPING_TYPE'),
  capping: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.CAPPING'),
  optIn: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.OPT_IN'),
  converted: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.CONVERTED'),
  wagered: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.WAGERED'),
  lockAmountStrategy: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.LOCK_AMOUNT_STRATEGY'),
  claimable: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.CLAIMABLE'),
  maxBet: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.MAX_BET'),
  name: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.NAME'),
  maxGrantAmount: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.MAX_GRANTED_AMOUNT'),
  wageringRequirement: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.WAGERING_REQUIREMENT'),
  moneyPriority: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.MONEY_TYPE_PRIORITY'),
  lifeTime: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.LIFE_TIME'),
  customTemplate: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.CUSTOM_TEMPLATE'),
  template: I18n.t('PLAYER_PROFILE.BONUS.MODAL_CREATE.LABELS.TEMPLATE'),
};

const wageringRequirementCustomValueFieldTypes = keyMirror({
  ABSOLUTE: null,
  BONUS: null,
});

const wageringRequirementCustomValueFieldTypesLabels = {
  [wageringRequirementCustomValueFieldTypes.ABSOLUTE]: I18n.t(
    'PLAYER_PROFILE.BONUS.MODAL_CREATE.WAGERING_REQUIREMENT_CUSTOM_VALUE_TYPE.ABSOLUTE'
  ),
  [wageringRequirementCustomValueFieldTypes.BONUS]: I18n.t(
    'PLAYER_PROFILE.BONUS.MODAL_CREATE.WAGERING_REQUIREMENT_CUSTOM_VALUE_TYPE.PERCENTAGE'
  ),
};

const mapResponseErrorToField = {
  'already-exists': 'name',
};

export {
  attributeLabels,
  mapResponseErrorToField,
  wageringRequirementCustomValueFieldTypesLabels,
};
