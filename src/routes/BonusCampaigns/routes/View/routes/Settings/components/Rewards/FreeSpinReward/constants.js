import I18n from '../../../../../../../../../utils/fake-i18n';

const attributeLabels = {
  freeSpinReward: I18n.t('BONUS_CAMPAIGNS.REWARDS.FREE_SPIN_REWARD'),
  provider: I18n.t('BONUS_CAMPAIGNS.REWARDS.PROVIDER'),
  games: I18n.t('BONUS_CAMPAIGNS.REWARDS.GAMES'),
  freeSpins: I18n.t('BONUS_CAMPAIGNS.REWARDS.FREE_SPINS'),
  lifeTime: I18n.t('BONUS_CAMPAIGNS.REWARDS.LIFE_TIME'),
  lines: I18n.t('BONUS_CAMPAIGNS.REWARDS.LINES'),
  coins: I18n.t('BONUS_CAMPAIGNS.REWARDS.COINS'),
  coinValue: I18n.t('BONUS_CAMPAIGNS.REWARDS.COIN_VALUE'),
  perLine: I18n.t('BONUS_CAMPAIGNS.REWARDS.PER_LINE'),
  spinValue: I18n.t('BONUS_CAMPAIGNS.REWARDS.SPIN_VALUE'),
  totalValue: I18n.t('BONUS_CAMPAIGNS.REWARDS.TOTAL_VALUE'),
  multiplier: I18n.t('BONUS_CAMPAIGNS.REWARDS.MULTIPLIER'),
  multipliersType: I18n.t('BONUS_CAMPAIGNS.REWARDS.MULTIPLIERS_TYPE'),
  moneyPrior: I18n.t('BONUS_CAMPAIGNS.REWARDS.MONEY_TYPE_PRIOR'),
  bmBetLimit: I18n.t('BONUS_CAMPAIGNS.REWARDS.BM_BET_LIMIT'),
  customContribRate: I18n.t('BONUS_CAMPAIGNS.REWARDS.CUSTOM_CONTRIB_RATE'),
};

const attributePlaceholders = {
  days: I18n.t('BONUS_CAMPAIGNS.REWARDS.PLACEHOLDERS.DAYS'),
  notSet: I18n.t('BONUS_CAMPAIGNS.REWARDS.PLACEHOLDERS.NOT_SET'),
};

export {
  attributeLabels,
  attributePlaceholders,
};

